c
verification_service
q
verification_service
q
response.body
response
q
response.body
response
c
response = VerificationService.new(
      send_otp_params[:phone]
    ).send_otp_code
c
response = VerificationService.new(
      send_otp_params[:phone]
    ).send_otp_code
send_otp_params
c
session[:user_uuid]
session
c
@user.present? && BCrypt::Password.new(@user.password_digest) == new_session_params[:password_digest]
c
@user.password_digest == new_session_params[:password_digest]
@user.password_digest
new_session_params[:password_digest]
@user.password_digest == new_session_params[:password_digest]
@user.password_digest
@user
c
$2a$12$ypqkSGwuH4py33rqaUIfte/49Y5WnMHtjhlHNfKfIKGjuwhZG2Mee == 1234abcd
$2a$12$ypqkSGwuH4py33rqaUIfte/49Y5WnMHtjhlHNfKfIKGjuwhZG2Mee = 1234abcd
"$2a$12$ypqkSGwuH4py33rqaUIfte/49Y5WnMHtjhlHNfKfIKGjuwhZG2Mee" == '1234abcd'
@user.password_digest = BCrypt::Password.create(params[:user][:password_digest])
params[:user][:password_digest]
params[:user]
c
Password.create('1234abcd')
c
create_params[:password_digest]
@user.try(:authenticate, create_params[:password_digest])
create_params[:password_digest]
create_params
c
params.permit(:email, :password_digest, :name, :phone)
params
create_params
create_params.valid?
params
create_params
@user
c
@user.errors
@user.save
c
@user.savec
@user.save!
@user.save
c
create_params
c
create_params
c
c\
create_params
c
q
params.require(:user).permit(:email, :password)
create_params
@user
c
I18n.t 'hello'
i18n.t 'hello'
@user.errors
@user.save
c
@user.save
c
params.permit(:email, :password)
params.permit(:user)
params
c
params
c
params
c
session['brand_id']
session
c
@vision
c
@vision
c
session['session_id']
session['id']
session['current_user_id']
session.inspect
session
c
session.inspect
session['session_id']
session
c
@vision[2]
@vision = []
new_params
c
new_params
c
new_params['vision']
new_params
c
params
c
@brand.save
c
"" == nil
"" == null
@brand
create_params
@brand.save
